/* Copyright 2017 Lime Microsystems Ltd.Licensed under the Apache License, Version 2.0 (the "License");you may not use this file except in compliance with the License.You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.*/using namespace std;#define	_PI			3.14159265358979311long	Mask( long num, unsigned char bit, unsigned char value );void	FFT( float _Complex data[], float _Complex spectrum[], long N );void	InvFFT( float _Complex spectrum[], float _Complex data[], long N );void	Window( float _Complex data[], long N );void	conj( float _Complex vec[], long N );void	dotprod( float _Complex vecr[], float _Complex vec1[], float _Complex vec2[], long N );long	maxloc(float _Complex vec[], long N);void	acf( float _Complex seq1[], float _Complex seq2[], long N, long *pos, float *mg, float *ph );void	acf2( float _Complex seq1[], float _Complex seq2conjfft[], long N, long *pos, float *mg, float *ph );void	cshift( float _Complex seq1[], float _Complex seq2[], long N, long off );void	cpyvec( float _Complex seq1[], float _Complex seq2[], long N );